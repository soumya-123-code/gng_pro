{"ast":null,"code":"export const CartReducer = (state, action) => {\n  let {\n    shoppingCart,\n    totalPrice,\n    qty\n  } = state;\n  let product;\n  let index;\n  let updatedPrice;\n  let updatedQty;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const check = shoppingCart.find(cart => cart.id === action.id);\n\n      if (check) {\n        // return state;\n        return {\n          shoppingCart: [...shoppingCart],\n          totalPrice,\n          message: 'This is product is already in the cart!',\n          qty\n        };\n      } else {\n        product = action.products.find(product => product.id === action.id);\n        product['qty'] = 1;\n        updatedQty = qty + 1;\n        return {\n          shoppingCart: [product, ...shoppingCart],\n          totalPrice: totalPrice + product.price,\n          message: '',\n          qty: updatedQty\n        };\n      }\n\n      break;\n\n    case 'DELETE_PRODUCT':\n      const filtered = shoppingCart.filter(cart => cart.id !== action.id);\n      product = shoppingCart.find(cart => cart.id === action.id); // setAllPrice(allPrice - product.price * product.qty);\n\n      updatedPrice = totalPrice - product.price * product.qty;\n      updatedQty = qty - product.qty;\n      return {\n        shoppingCart: [...filtered],\n        totalPrice: updatedPrice,\n        message: '',\n        qty: updatedQty\n      };\n      break;\n\n    case 'INC':\n      console.log('Inc run');\n      product = shoppingCart.find(product => product.id === action.id);\n      index = shoppingCart.findIndex(product => product.id === action.id);\n      product.qty = product.qty + 1;\n      updatedQty = qty + 1;\n      totalPrice = totalPrice + product.price;\n      console.log(product, totalPrice);\n      shoppingCart[index] = product;\n      return {\n        shoppingCart: [...shoppingCart],\n        totalPrice: totalPrice,\n        message: '',\n        qty: updatedQty\n      };\n      break;\n\n    case 'DEC':\n      product = shoppingCart.find(product => product.id === action.id);\n      index = shoppingCart.findIndex(product => product.id === action.id);\n\n      if (product.qty > 1) {\n        console.log('Yes graer');\n        product.qty = product.qty - 1;\n        updatedPrice = totalPrice - product.price;\n        updatedQty = qty - 1;\n        shoppingCart[index] = product;\n        console.log(\"afer dec\", shoppingCart);\n        return {\n          shoppingCart: [...shoppingCart],\n          totalPrice: updatedPrice,\n          message: '',\n          qty: updatedQty\n        };\n      } else {\n        return {\n          shoppingCart: [...shoppingCart],\n          totalPrice: totalPrice,\n          message: '',\n          qty: qty\n        };\n      }\n\n      break;\n\n    case 'EMPTY':\n      return {\n        shoppingCart: [],\n        totalPrice: 0,\n        message: '',\n        qty: 0\n      };\n      break;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/soumya/mstorage/contextapi/React-Ecommrace/src/Global/cartReducer.js"],"names":["CartReducer","state","action","shoppingCart","totalPrice","qty","product","index","updatedPrice","updatedQty","type","check","find","cart","id","message","products","price","filtered","filter","console","log","findIndex"],"mappings":"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","sourcesContent":["export const CartReducer = (state, action) => {\n    let {shoppingCart, totalPrice, qty} = state;\n    let product;\n    let index;\n    let updatedPrice;\n    let updatedQty;\n    switch(action.type){\n        case 'ADD_TO_CART': \n        const check = shoppingCart.find(cart => cart.id === action.id);\n        if(check){\n            // return state;\n            return {shoppingCart: [...shoppingCart], totalPrice, message: 'This is product is already in the cart!', qty};\n        } else {\n            product = action.products.find(product => product.id === action.id);\n            product['qty'] = 1;\n            updatedQty = qty + 1;\n            return {shoppingCart: [product,...shoppingCart], totalPrice: totalPrice+product.price, message: '', qty: updatedQty};\n        }\n        break;\n        case 'DELETE_PRODUCT':\n            const filtered = shoppingCart.filter(cart => cart.id !== action.id);\n            product = shoppingCart.find(cart => cart.id === action.id);\n            // setAllPrice(allPrice - product.price * product.qty);\n            updatedPrice = totalPrice - product.price * product.qty;\n            updatedQty = qty - product.qty;\n            return {shoppingCart: [...filtered], totalPrice: updatedPrice, message: '', qty: updatedQty}\n            break;\n        \n        case 'INC':\n            console.log('Inc run');\n            product = shoppingCart.find(product => product.id === action.id);\n            index = shoppingCart.findIndex(product => product.id === action.id);\n            product.qty = product.qty + 1;\n            updatedQty = qty + 1;\n            totalPrice = totalPrice + product.price;\n            console.log(product, totalPrice);\n            shoppingCart[index] = product;\n            return {shoppingCart: [...shoppingCart], totalPrice: totalPrice, message: '', qty: updatedQty}\n            break;\n\n        case 'DEC': \n        product = shoppingCart.find(product => product.id === action.id);\n        index = shoppingCart.findIndex(product => product.id === action.id);\n       if(product.qty > 1){\n           console.log('Yes graer');\n       product.qty = product.qty - 1;\n       updatedPrice = totalPrice - product.price;\n       updatedQty = qty - 1;\n       shoppingCart[index] = product;\n       console.log(\"afer dec\",shoppingCart);\n       return {shoppingCart: [...shoppingCart], totalPrice: updatedPrice, message: '', qty: updatedQty};\n       } else {\n           return {shoppingCart: [...shoppingCart], totalPrice: totalPrice, message: '', qty: qty}\n       }\n       break;\n\n       case 'EMPTY':\n        return {shoppingCart: [], totalPrice: 0, message: '', qty: 0}\n        break;\n    default: \n    return state;\n\n    }\n    \n\n}"]},"metadata":{},"sourceType":"module"}